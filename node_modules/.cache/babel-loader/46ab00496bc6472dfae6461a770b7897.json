{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/React/bordeaux_p2_sept2019_SpotiWild/src/components/Game/CountDown.js\";\nimport React from 'react';\n\nclass CountDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startCount = false;\n    this.state = {\n      number: 30 // nombre du compteur en secondes\n\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000); // effectue tick() toutes les 1000 millisecondes\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID); // jsp vraiment mais apparemment faut le garder dans l'exemple de l'horloge que j'ai cannibalisé\n  }\n\n  tick() {\n    this.props.startCount // si le props startCount défini dans Game.js...\n    ? this.state.number <= 0 // true : si le state number est inférieur ou égal à 0...\n    ? this.setState({\n      number: this.state.number\n    }) // true : ne pas toucher\n    : this.setState({\n      number: this.state.number - 1\n    }) // false : nombre - 1\n    : this.setState({\n      number: this.state.number\n    }); // false : ne pas toucher\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"countdown-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.number);\n  }\n\n}\n\nexport default CountDown;","map":{"version":3,"sources":["/Users/macbookpro/Documents/React/bordeaux_p2_sept2019_SpotiWild/src/components/Game/CountDown.js"],"names":["React","CountDown","Component","constructor","props","startCount","state","number","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG,CACA;;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,IAApB,CAA1B,CADkB,CACmC;AACtD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb,CADqB,CACQ;AAC9B;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKP,KAAL,CAAWC,UAAX,CAAsB;AAAtB,MACI,KAAKC,KAAL,CAAWC,MAAX,IAAqB,CAArB,CAAuB;AAAvB,MACE,KAAKO,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAArB,KAAd,CADF,CAC+C;AAD/C,MAEE,KAAKO,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,GAAoB;AAA9B,KAAd,CAHN,CAGuD;AAHvD,MAII,KAAKO,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC;AAArB,KAAd,CAJJ,CADK,CAK6C;AACnD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKT,KAAL,CAAWC,MAAvC,CAAP;AACD;;AA3BqC;;AA8BxC,eAAeN,SAAf","sourcesContent":["import React from 'react';\n\nclass CountDown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startCount = false;\n    this.state = {\n      number: 30 // nombre du compteur en secondes\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000); // effectue tick() toutes les 1000 millisecondes\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID); // jsp vraiment mais apparemment faut le garder dans l'exemple de l'horloge que j'ai cannibalisé\n  }\n\n  tick() {\n    this.props.startCount // si le props startCount défini dans Game.js...\n      ? this.state.number <= 0 // true : si le state number est inférieur ou égal à 0...\n        ? this.setState({ number: this.state.number }) // true : ne pas toucher\n        : this.setState({ number: this.state.number - 1 }) // false : nombre - 1\n      : this.setState({ number: this.state.number }); // false : ne pas toucher\n  }\n\n  render() {\n    return <div id=\"countdown-number\">{this.state.number}</div>;\n  }\n}\n\nexport default CountDown;\n"]},"metadata":{},"sourceType":"module"}