{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar React = require('react');\n\nvar FocusTrap = require('focus-trap-react');\n\nvar displace = require('react-displace');\n\nvar noScroll = require('no-scroll');\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"getApplicationNode\", function () {\n      if (_this.props.getApplicationNode) return _this.props.getApplicationNode();\n      return _this.props.applicationNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkUnderlayClick\", function (event) {\n      if (_this.dialogNode && _this.dialogNode.contains(event.target) || // If the click is on the scrollbar we don't want to close the modal.\n      event.pageX > event.target.ownerDocument.documentElement.offsetWidth || event.pageY > event.target.ownerDocument.documentElement.offsetHeight) return;\n\n      _this.exit(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkDocumentKeyDown\", function (event) {\n      if (_this.props.escapeExits && (event.key === 'Escape' || event.key === 'Esc' || event.keyCode === 27)) {\n        _this.exit(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"exit\", function (event) {\n      if (_this.props.onExit) {\n        _this.props.onExit(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (!this.props.titleText && !this.props.titleId) {\n        throw new Error('react-aria-modal instances should have a `titleText` or `titleId`');\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.onEnter) {\n        this.props.onEnter();\n      } // Timeout to ensure this happens *after* focus has moved\n\n\n      var applicationNode = this.getApplicationNode();\n      setTimeout(function () {\n        if (applicationNode) {\n          applicationNode.setAttribute('aria-hidden', 'true');\n        }\n      }, 0);\n\n      if (this.props.escapeExits) {\n        this.addKeyDownListener();\n      }\n\n      if (this.props.scrollDisabled) {\n        noScroll.on();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.scrollDisabled && !this.props.scrollDisabled) {\n        noScroll.off();\n      } else if (!prevProps.scrollDisabled && this.props.scrollDisabled) {\n        noScroll.on();\n      }\n\n      if (this.props.escapeExits && !prevProps.escapeExits) {\n        this.addKeyDownListener();\n      } else if (!this.props.escapeExits && prevProps.escapeExits) {\n        this.removeKeyDownListener();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.scrollDisabled) {\n        noScroll.off();\n      }\n\n      var applicationNode = this.getApplicationNode();\n\n      if (applicationNode) {\n        applicationNode.setAttribute('aria-hidden', 'false');\n      }\n\n      this.removeKeyDownListener();\n    }\n  }, {\n    key: \"addKeyDownListener\",\n    value: function addKeyDownListener() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        document.addEventListener('keydown', _this2.checkDocumentKeyDown);\n      });\n    }\n  }, {\n    key: \"removeKeyDownListener\",\n    value: function removeKeyDownListener() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        document.removeEventListener('keydown', _this3.checkDocumentKeyDown);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var style = {};\n\n      if (props.includeDefaultStyles) {\n        style = {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          zIndex: 1050,\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          textAlign: 'center'\n        };\n\n        if (props.underlayColor) {\n          style.background = props.underlayColor;\n        }\n\n        if (props.underlayClickExits) {\n          style.cursor = 'pointer';\n        }\n      }\n\n      if (props.underlayStyle) {\n        for (var key in props.underlayStyle) {\n          if (!props.underlayStyle.hasOwnProperty(key)) continue;\n          style[key] = props.underlayStyle[key];\n        }\n      }\n\n      var underlayProps = {\n        className: props.underlayClass,\n        style: style\n      };\n\n      if (props.underlayClickExits) {\n        underlayProps.onMouseDown = this.checkUnderlayClick;\n      }\n\n      for (var prop in this.props.underlayProps) {\n        underlayProps[prop] = this.props.underlayProps[prop];\n      }\n\n      var verticalCenterStyle = {};\n\n      if (props.includeDefaultStyles) {\n        verticalCenterStyle = {\n          display: 'inline-block',\n          height: '100%',\n          verticalAlign: 'middle'\n        };\n      }\n\n      var verticalCenterHelperProps = {\n        key: 'a',\n        style: verticalCenterStyle\n      };\n      var dialogStyle = {};\n\n      if (props.includeDefaultStyles) {\n        dialogStyle = {\n          display: 'inline-block',\n          textAlign: 'left',\n          top: 0,\n          maxWidth: '100%',\n          cursor: 'default',\n          outline: props.focusDialog ? 0 : null\n        };\n\n        if (props.verticallyCenter) {\n          dialogStyle.verticalAlign = 'middle';\n          dialogStyle.top = 0;\n        }\n      }\n\n      if (props.dialogStyle) {\n        for (var _key2 in props.dialogStyle) {\n          if (!props.dialogStyle.hasOwnProperty(_key2)) continue;\n          dialogStyle[_key2] = props.dialogStyle[_key2];\n        }\n      }\n\n      var dialogProps = {\n        key: 'b',\n        ref: function (el) {\n          this.dialogNode = el;\n        }.bind(this),\n        role: props.alert ? 'alertdialog' : 'dialog',\n        id: props.dialogId,\n        className: props.dialogClass,\n        style: dialogStyle\n      };\n\n      if (props.titleId) {\n        dialogProps['aria-labelledby'] = props.titleId;\n      } else if (props.titleText) {\n        dialogProps['aria-label'] = props.titleText;\n      }\n\n      if (props.focusDialog) {\n        dialogProps.tabIndex = '-1';\n      } // Apply data- and aria- attributes passed as props\n\n\n      for (var _key3 in props) {\n        if (/^(data-|aria-)/.test(_key3)) {\n          dialogProps[_key3] = props[_key3];\n        }\n      }\n\n      var childrenArray = [React.createElement('div', dialogProps, props.children)];\n\n      if (props.verticallyCenter) {\n        childrenArray.unshift(React.createElement('div', verticalCenterHelperProps));\n      }\n\n      var focusTrapOptions = props.focusTrapOptions || {};\n\n      if (props.focusDialog || props.initialFocus) {\n        focusTrapOptions.initialFocus = props.focusDialog ? \"#\".concat(this.props.dialogId) : props.initialFocus;\n      }\n\n      focusTrapOptions.escapeDeactivates = props.escapeExits;\n      return React.createElement(FocusTrap, {\n        focusTrapOptions: focusTrapOptions,\n        paused: props.focusTrapPaused\n      }, React.createElement('div', underlayProps, childrenArray));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\n_defineProperty(Modal, \"defaultProps\", {\n  underlayProps: {},\n  dialogId: 'react-aria-modal-dialog',\n  underlayClickExits: true,\n  escapeExits: true,\n  underlayColor: 'rgba(0,0,0,0.5)',\n  includeDefaultStyles: true,\n  focusTrapPaused: false,\n  scrollDisabled: true\n});\n\nvar DisplacedModal = displace(Modal);\n\nDisplacedModal.renderTo = function (input) {\n  return displace(Modal, {\n    renderTo: input\n  });\n};\n\nmodule.exports = DisplacedModal;","map":null,"metadata":{},"sourceType":"script"}